package test2;

public class Main01 {

	public static void main(String[] args) {
		// 4. arr 배열에 DanceRobot, SingRobot, DrawRobot 객체 생성
		// (소프트웨어 공학기술의 요구사항 도출 기법을 활용하여 업무 분석가가 제시한 분석모델에 대해서 확인할 수 있다.10)
		Robot[] arr = { ?, ?, ?};

		for(int i=0; i< arr.length;i++) {
			// 5. 반복문을 통해서 action() 메서드 호출
			// (업무 분석가가 제시한 분석모델이 개발할 응용소프트웨어에 미칠 영향을 검토하여 기술적인 타당성 조사를 할 수 있다.10)
			action(?);
		}

	}
	
	public static void action(Robot r) {
		// 6. 파라미터로 넘어온 객체 r이 DanceRobot인지 체크  
		// (업무 분석가가 제시한 분석모델에 대해서 응용소프트웨어를 개발하기 위해 필요한 추가적인 의견을 제시할 수 있다.10)
		if(r ? DanceRobot) {
			// 7. r 객체를 DanceRobot 으로 명시적 객체 형변환한다.
			//(소프트웨어 공학기술의 요구사항 분석 기법을 활용하여 업무 분석가가 정의한 응용소프트웨어의 요구사항을 확인할 수 있다.3)
			DanceRobot dr = (?)r;
			// 8. dance() 호출
			//(	개발하고자 하는 응용소프트웨어와 관련된 운영체제ㆍ데이터베이스관리시스템ㆍ미들웨어 등의 요구사항을 식별할 수 있다.3)
			?
		// 9. 파라미터로 넘어온 객체 r이 SingRobot인지 체크
		// (업무 분석가가 제시한 분석모델에 대해서 응용소프트웨어를 개발하기 위해 필요한 추가적인 의견을 제시할 수 있다.10)
		} else if(r ? SingRobot) {
			// 10. r 객체를 DanceRobot 으로 명시적 객체 형변환한다.
			//(소프트웨어 공학기술의 요구사항 분석 기법을 활용하여 업무 분석가가 정의한 응용소프트웨어의 요구사항을 확인할 수 있다.3)
			SingRobot sr = (?)r;
			// 11. sing() 호출
			//(	개발하고자 하는 응용소프트웨어와 관련된 운영체제ㆍ데이터베이스관리시스템ㆍ미들웨어 등의 요구사항을 식별할 수 있다.3)
			?
		// 12. 파라미터로 넘어온 객체 r이 DrawRobot인지 체크
		// (업무 분석가가 제시한 분석모델에 대해서 응용소프트웨어를 개발하기 위해 필요한 추가적인 의견을 제시할 수 있다.10)
		} else if(r ? DrawRobot) {
			// 13. r 객체를 DanceRobot 으로 명시적 객체 형변환한다.
			//(소프트웨어 공학기술의 요구사항 분석 기법을 활용하여 업무 분석가가 정의한 응용소프트웨어의 요구사항을 확인할 수 있다.3)
			DrawRobot dr = (?)r;
			// 14. draw() 호출
			//(	개발하고자 하는 응용소프트웨어와 관련된 운영체제ㆍ데이터베이스관리시스템ㆍ미들웨어 등의 요구사항을 식별할 수 있다.5)
			?
		}
	}


}
