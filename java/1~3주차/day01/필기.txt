----------------------------------------------------------------
1. 프로그래밍 언어
 1-1. 프로그래밍 언어란?
    - 프로그래밍 언어란 주어진 어떤 문제를 해결하기 위해 인간과 컴퓨터 사이에서 	의사소통을 가능케 하는 인공적인 언어이다.
    - 이 언어를 통하여 사용자는 컴퓨터에게 일련의 일을 시키는 명령어들의 집합체	인 프로그램을 작성할 수 있다.

  1-2. 프로그래밍 언어의 종류
    - 기계어 : (0과1)컴퓨터가 이해하는 언어로서 2진수의 집합으로 구성되어 있다.
    - 고급언어 : 사람이 이해할 수 있는 수준의 언어. 기계어로 변환되어야만 프로그	램의 형태로 실행하는것이 가능하다. (C, C++, JAVA, ...etc)


  1-3. JAVA
    - 1996년 개발됨, 개발자 살아있음
    - 운영체제에 독립적
	: JVM이 설치된 환경이라면 어디서든지 실행 가능함.
    - 객체지향 언어 (-> string boot까지도 끝까지 가는 개념, 이걸 이해하는게 중요)
	: 상속, 캡슐화, 다양성
	: 코드의 재사용 및 유지보수에 용이함.
-> 클린코드? 남들이 봐도 잘 이해할 수 있도록 보기 깔끔하게, 주석등을 얼마나 잘 달았는지 등.

    -  자동 메모리 관리
	 : Garbage Collector가 자동으로 메모리를 관리해 준다.
- > 메모리를 효율적으로 관리하는게 (책임감 있는)시니어 개발자로써는 반드시 필요한 역량

    -  네트워크, 분산처리, 멀티스레드
	: 시스템과 관계없이 네트워크, 분산처리, 멀티스레드 구현을 위한 손쉬운 API제공.

- > 운영체제, 객체지향, 자동메모리 관리라는 이 개념들이 매우 중요한 편.
운영체제가 독립적, 왜 독립적? 다른언어들은 독립적이지 않단 이야기?, 이런식으로 면접이 들어감.


운영체제란?
    - 윈도우나 맥같은 os

  1-4. JVM
    - 자바 가상 머신 (Java Virtual Machine / JVM)
    - 컴파일된 자바 바이트 코드를 실행시켜주는 소프트웨어
    - 자바 프로그램은 JVM이 설치된 환경이라면 운영체제나 하드웨어에 종		속되지 않고 실행이 가능하다.
    - 운영체제로부터 독립적이라는 뜻.

-> (그림자료) *.java / *.class파일
	class 파일만 있으면 됨
	JAVA가상머신(JVM), 어떤 운영체제에 있어서도 사용 가능.(독립적이다.)

-> 운영체제에 종속적인 프로그램은 window에서는 window만.


  1-5. java 설치 
(설치방법, 있는지 확인하는 방법, 삭제하고 잘삭제 되었는지 등을 오늘 알려줄거.)

    - 자바설치 여부
	: winkey + R
	   + notepad : 새로운 메모장 열림
	   + calc : 계산기
	   + cmd : 명령 프롬프트
	     -> java -version, javac -version (자바 깔려있는 버전 확인 	및)
	     -> exit (명령창 닫기)

  1-6. JRE
    - 자바 실행 환경(java Runtime Environment)
	신규개발은 불가능, 개발된것을 사용
    - JRE = JVM + Library classes
    - JRE는 JVM이 자바 프로그램을 동작시킬 때 필요한 라이브러리 파일들과 기타 파일들을 가지고 있다. JRE는 JVM의 실행환경을 구현했다고 할 수 있다.

  1-7. JDK
    - 자바 개발도구(Java Development Kit)
	실행도, 개발도 가능
    - JDK = JRE + Development Tools
    - JDK는 JRE + 개발을 위해 필요한 도구(Javac, Java등)을 포함한다.

-> (그림자료) JRE와 JDK는 호완관계라고 생각하면 됨. 

  1-8. Eclipse
  console = alt + shift + Q,C

===> 기본설정<======
  window -> preferences -> enc 검색 ->
content Types -> default encoding UTF-8
Workspace ->outhers -> UTF-8
나머지도 마찬가지로 UTF-8로 변경, apply 클릭 잊지 말고!

window -> perferences 다시 접속, general -> Editors -> Text Editors에
show line numbers 체크가 되어있는지 확인(왠만하면 되어 있음)

=======================================================
ctrl + s : 저장키
ctrl + f11 : run 단축키



2. 주석
  2-1. 주석문 이란?
    - 프로그램 소스코드 안에서 개발자의 필요에 따라 명시하는 설명문
    - 주석은 프로그램을 컴파일 되지 않는다.
    - 특정 명령문이 실행되지 않도록 차단하는 용도로 사용할 수있다.

  2-2. 주석문의 종류
    - 한줄만 처리하는 주석문
	// "//"가 앞에 명시된 라인은 주석으로 인식됩니다. 

    - 여러줄을 처리하는 주석문
	/*
	   이 블록 안에서는 여러 라인을 주석으로 처리할 수 있습니다.
	*/


3. 단축키
  - Ctrl + shift + (+, -) : 글자 크게, 작게
	***Window>Preferences>General>Appearance>Colors and Fonts>Basic>Text Font>Edit 해서 글씨크기 수동으로 설정은 가능합니다
  - Ctrl + s : 저장키
  - Ctrl + f11 : run 단축키
  - Ctrl + Space : 소스 자동완성 
	*** sysout + Ctrl + Space 입력하면 =>System.out.println(|); 바로 나옴
  - Ctrl + M : 소스코드 화면 확대, 축소 (편리...)
  - Ctrl + D : 소스코드 한줄 삭제
  - 지우고 싶은 영역 선택 + Ctrl + D : 선택한 영역 전체 삭제 
  - Ctrl + A : 전체영역 선택
  - Ctrl + Shift + F : 소스의 줄 맞춤과 들여쓰기를 자동으로 처리
  - Ctrl + Z : 기존 소스코드로 역방향 원복
  - Ctrl + y : 기존 소스코드 정방향 원복
  - Ctrl + Alt + 아래로 방향키 : 소스코드 복사.


4. 변수
  - Java 에서도 다양한 종류의 자료를 표현할 수있는 값을 변수라고 부르며, 일반적으로 웹 페이지에서 처리하고자 하는 "데이터"에 해당한다.
  - 사용하는 이유, 데이터를 저장할때 낭비되는 공간을 줄이기 위해.

  4-1. 자료형 (date type)
    - 프로그래밍 언어에서 변수의 종류를 구별하기 위해 사용되는 키워드
    - 자바에서 제공되는 자료형의 종류에는 총 8가지가 있으며, 이를 기본 자료형 (Primitive Data Type)이라 한다.

  4-2. 자료형이 가지는 의미
    - 모든 변수는 컴퓨터의 메모리 영역에 생성된다.
    - 일반적으로 메모리란, PC에서 설치하는 RAM을 의미한다.
    - 4byte의 크기를 갖는 변수값 하나를 생성할 경우, pc의 RAM 에서 해당 용량만큼을 사용하게 된다.
    - 변수는 RAM의 크기를 넘지 않는 범위 안에서만 생성할 수 있다.
	(용량이 넘어서는 경우 OutOfMemory 에러 발생)











