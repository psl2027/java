day06=====================================================
1. 배열
  1-1. 2차배열
    - 2차원 배열을 선언, 크기 할당, 값의 대입에 대한 일괄 처리
	-> 2차원 배열의 경우 블록괄호"{}"를 2중으로 겹쳐서 2차원 배열을 구분한다.
	-> 행과 열의 구분에는 콤마(,)가 사용된다
	-> 컴파일러가 블록괄호 "{}"의 요소를 파악하면 행, 열의 크기가 산출될 수 있으므로 배열의 크기 설정을 위한 [][]에는 배열의 크기를 명시하지 않는다.

	데이터형[][] 배열이름 = new 데이터형[][]{
		{0행0열, 0행1열의 값,...,0행n열의 값}.
		{1행0열, 1행1열의 값,...,1행n열의 값},
		...
		{n행0열, n행1열의 값,...,n행n열의 값}

	};
행 : 좌우, 열: 위아래

[성적표.jpg] 아래에서도 사용



  1-2. 2차원 배열에 대한 값의 대입방법
    - 행, 열에 대한 인덱스를 통하여 값을 대입한다/

	배열이름[행][열] = 값;

    - int[][] grade = new int[3][3];
       grade[0][0] =75;
       grade[0][1] =82;
       grade[0][2] =91;
	....

    - 일괄지정하는 경우

	int[][] grade = new int[][]{
		{75, 82, 91}
		{88, 64, 50}
		{100, 100, 90}
	};


  1-3. 2차원 배열의 길이
    - 2차원 배열의 길이는 행에 대한 측면과 열에 대한 측면을 나누어서 생각해야 한다.
    - 행의 길이
	-> 1차배열의 길이는 2차 배열에서는 행의 크기로 조회가 된다. (헷갈리지 말기)

	int rows = grade.length;

    - 열의 길이
	-> 열의 길이는 각 행에 대하여 개별적으로 조회해야 한다.

	int cols = grade[행].length;



2. 메서드
  2-1. 프로그램의 시작점
    - java 프로그램이 시작되는 시작점을 의미하는 main은 public, static, void, main, (String[] args)라는 키워드로 구성되는 하나의 {...} 블록이다.

  2-2. 다른 이름의 메서드 만들기

	f(x) = x+1

	f : 함수이름
	x: 매개변수
	x + 1 : 식

	f(1) = 2
	f(10) = 11
	f(5) = 6

  2-3. 프로그램의 함수 = 메서드
    - 특정 기능(=연산)을 그룹화 해서 재사용하기 위한 단위
->public static은 나중에 배울거

	public static void 메서드이름() {
		... 수행할 연산식...
	}

  2-4. 메서드의 호출
    - 정의된 메서드는 다른 메서드를 구성하는 {...}안에서 다음의 형식으로 사용 될수 있으며, 이를 메서드를 호출한다고 한다.

	메서드이름();


  2-5. 메서드 파라미터
    - java프로그램의 메서드(=함수)는 자신이 실행되는데 필요한 조건값을 메서드 이름 뒤의 괄호안에서 변수 형태로 선언한다. 이를 메서드 파라미터라고 한다.

	public static void 메서드이름( 변수형 변수이름 ) {
	
	
	}	
 
  2-6. 다중 파라미터
    - 메서드가 연산을 수행하는데 두 개 이상의 파라미터가 필요하다면 콤마(,)로 구분하여 선언할 수 있다.

	public static void 메서드 이름 ( 변수형 변수이름, 변수형 변수이름, 변수형 변수이름) {

	}

  2-7. 파라미터를 갖는 메서드의 호출
    - 메서드 정의하면서 파라미터가 명시되어 있다면 해당 메서드를 호출하면서 파라미터를 전달해 주어야 한다.
(2-6 연결)
	메서드이름( 값1, 값2, 값3 );


  2-8. 메서드의 리턴값
    - 메서드가 연산 결과를 자신이 호출된 위치에 반환하는것을 "리턴"이라고 하며, 반환되는 값을 "리턴값"이라고 한다.
    - 메서드 안에서 값을 리턴하기 위해서는 "return"이라는 키워드가 사용된다.
    - 값을 리턴하는 메서드는 선언시에 "void" 키워드 대신, 리턴하는 값에 대한 변수형이 명시된다. void는 리턴하는 값이 없다는 뜻이다!


	public static 리턴형 메서드 이름( 변수형 파라미터, ... ) {
		return 리턴값;
	}
    

-> 그냥 단순 사칙연산만 할것이냐, 더 복잡한 작업을 할 것이냐에 따라 return을 사용 할/ 말을 정한다. (어떤 작업을 하느냐에 따라 다름



  2-9. 두개의 함수를 연립하여 사용하기.

	f1(x) = x + 1
	f2(y) = f1(y) + 10
	k = f2(5)
	-> f1(5) + 10
	-> 5 + 1 + 10
	-> 16

  2-10. 메서드간의 상호 호출
    -  JAVA의 메서드 역시 서로 호출하는 것이 가능하다. 호출된 메서드가 값을 리턴하는 경우, 리턴받은 값을 다른 연산에 사용할 수 있다.
sp


다음주,
3. 클래스! Start!












































